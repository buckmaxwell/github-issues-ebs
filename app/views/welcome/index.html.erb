
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>



<% if current_user %>
	<p>Welcome, <%= current_user.name %></p>


	<%= form_tag("/choose_repo", method: "post") do %>
		<%= select_tag(:repository, options_for_select(@repos, @selected_repo)) %>
		<%= select_tag(:priority, options_for_select(@priority_labels, @selected_priority)) %>

		<%= submit_tag("Display Estimates") %>
	<% end %>


	<h3>Milestones</h3>
	<% if @milestones.length > 0 %>
	<% @milestones.each_with_index do |milestone, i| %>
		<h4><%= "- #{milestone.title}" %></h4>

		<% if @data_stores[i].empty? %>

			<i>No developer information for milestone - you should assign developers to your issues and have them put estimates in the issue body.</i>

		<% else %>
			<!-- Line Chart --> 
			<div id=<%= "chart_div#{i.to_s}" %> ></div>
			<script>
				google.charts.load('current', {packages: ['corechart', 'line']});
				google.charts.setOnLoadCallback(drawBasic);

				function drawBasic() {

				      var data = new google.visualization.DataTable();
				      data.addColumn('number', 'X');
				      data.addColumn('number', 'Percent Certainty');

				      data.addRows(<%= raw @shipping_prob[i] %>);

				      var options = {
				      	title: 'Ready-to-Ship likelihood by hours from now',
				        hAxis: {
				          title: 'Hours From Now',
					      viewWindow: {
					      	min: 0
				           }
				        },
				        vAxis: {
				          title: 'Percent Certainty'
				        }
				      };

				      var chart = new google.visualization.LineChart(document.getElementById('<%= "chart_div#{i.to_s}" %>'));

				      chart.draw(data, options);
				    }
			</script>


			<!-- Box and Whisker -->
			<div id=<%= "box_plot#{i.to_s}" %>></div>
			<script>
			    google.charts.load('current', {'packages':['corechart']});
			    google.charts.setOnLoadCallback(drawBoxPlot);

			    function drawBoxPlot() {

			      
			      var array = <%= raw @boxplots[i] %>

			      var data = new google.visualization.DataTable();
			      data.addColumn('string', 'x');
			      data.addColumn('number', 'Maximum');
			      data.addColumn('number', 'Minimum');
			      data.addColumn('number', '25th Percentile');
			      data.addColumn('number', '50th Percentile');
			      data.addColumn('number', '75th Percentile');

			      data.addColumn({id:'max', type:'number', role:'interval'});
			      data.addColumn({id:'min', type:'number', role:'interval'});
			      data.addColumn({id:'firstQuartile', type:'number', role:'interval'});
			      data.addColumn({id:'median', type:'number', role:'interval'});
			      data.addColumn({id:'thirdQuartile', type:'number', role:'interval'});

			      data.addRows(array);

			      /**
			       * Takes an array of input data and returns an
			       * array of the input data with the box plot
			       * interval data appended to each row.
			       */
			      function getBoxPlotValues(array) {

			        for (var i = 0; i < array.length; i++) {

			          var arr = array[i].slice(1).sort(function (a, b) {
			            return a - b;
			          });

			          var max = arr[arr.length - 1];
			          var min = arr[0];
			          var median = getMedian(arr);

			          // First Quartile is the median from lowest to overall median.
			          var firstQuartile = getMedian(arr.slice(0, 4));

			          // Third Quartile is the median from the overall median to the highest.
			          var thirdQuartile = getMedian(arr.slice(3));

			          array[i][8] = max;
			          array[i][9] = min
			          array[i][10] = firstQuartile;
			          array[i][11] = median;
			          array[i][12] = thirdQuartile;
			        }
			        return array;
			      }

			      /*
			       * Takes an array and returns
			       * the median value.
			       */
			      function getMedian(array) {
			        var length = array.length;

			        /* If the array is an even length the
			         * median is the average of the two
			         * middle-most values. Otherwise the
			         * median is the middle-most value.
			         */
			        if (length % 2 === 0) {
			          var midUpper = length / 2;
			          var midLower = midUpper - 1;

			          return (array[midUpper] + array[midLower]) / 2;
			        } else {
			          return array[Math.floor(length / 2)];
			        }
			      }

			      var options = {
			          title:'Distribution of possible ship dates by developer',
			          height: 400,
			          legend: {position: 'none'},
			          hAxis: {
			            gridlines: {color: '#fff'},
			            title: 'Developers'
			          },
			          vAxis: {
			          	title: 'Hours'
			          },
			          lineWidth: 0,
			          series: [{'color': '#D3362D'}],
			          intervals: {
			            barWidth: 1,
			            boxWidth: 1,
			            lineWidth: 2,
			            style: 'boxes'
			          },
			          interval: {
			            max: {
			              style: 'bars',
			              fillOpacity: 1,
			              color: '#777'
			            },
			            min: {
			              style: 'bars',
			              fillOpacity: 1,
			              color: '#777'
			            }
			          }
			      };

			      var chart = new google.visualization.LineChart(document.getElementById('<%= "box_plot#{i.to_s}" %>'));

			      chart.draw(data, options);
			    }

			</script>
		<% end %>

		


	<% end %>
	<% else %>
		<i>There are no milestones for this issue</i>
	<% end %>

	<!-- Dev Info -->

	
	<h3>Developer Info</h3>
	<% if @collabs.empty? %>
		<i>No estimate history exists for the developers in this repository!</i>
	<% end %>

	<% @collabs.each do |collab| %>
		<div id=<%= "estimates_#{collab.login}" %> style="height: 350px; width: 800px"></div>
		<script>
		  google.charts.load('current', {'packages':['corechart']});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable(<%= raw collab.get_history_chart_data %>);

	        var options = {
	          title: '<%= raw collab.login %>',
	          hAxis: {minValue: 0, maxValue: 15, title:'Estimated Hours'},
	          vAxis: {minValue: 0, maxValue: 15, title: 'Actual Hours'},
	          trendlines: {
	            0: {
	              type: 'linear',
	            },
	            1: {
	              type: 'linear',
	              pointsVisible: false
	            }
	          },
	          series: {1: {pointsVisible: false}},
	          legend: { position: 'none' }
	        };

	        var chartLinear = new google.visualization.ScatterChart(document.getElementById('<%= "estimates_#{collab.login}" %>'));
	        chartLinear.draw(data, options);

	        
	      }
		</script>
	<% end %>

	<!-- End dev info -->

	<p><a href='/update_velocities'>Update Collaborator History</a></p>







<% else %>
	<%= link_to "Sign in with Github", "/auth/github" %>
<% end %>









